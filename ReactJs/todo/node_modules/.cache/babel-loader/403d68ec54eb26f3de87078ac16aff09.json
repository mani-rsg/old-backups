{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manravi/Desktop/Tech/ReactJs/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Form from './Components/Form';\n\nfunction App() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [select, setSelect] = useState(\"All\");\n  const [filtered, setFilter] = useState([]);\n  useEffect(() => {\n    console.log(select, \"sled\");\n\n    switch (select) {\n      case \"Completed\":\n        console.log(\"Completed\");\n        setFilter(todos.filter(todo => todo.completed === true));\n        break;\n\n      case \"Incomplete\":\n        console.log(\"Incomplete\");\n        setFilter(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        return setFilter(select);\n    }\n\n    console.log();\n  }, [todos, select]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      heading: \"TODO List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inputText: inputValue,\n      setInputValue: setInputValue,\n      todos: todos,\n      setTodos: setTodos,\n      select: select,\n      setSelect: setSelect,\n      filtered: filtered,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XObRAZu6IffhP1TCfmZBN9IS2KM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manravi/Desktop/Tech/ReactJs/todo/src/App.js"],"names":["React","useState","useEffect","Header","Form","App","inputValue","setInputValue","todos","setTodos","select","setSelect","filtered","setFilter","console","log","filter","todo","completed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,SAAX,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoB,MAApB;;AAEA,YAAQA,MAAR;AAEE,WAAK,WAAL;AACEI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAF,QAAAA,SAAS,CAACL,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAGA,IAAI,CAACC,SAAL,KAAiB,IAArC,CAAD,CAAT;AACA;;AACF,WAAK,YAAL;AACEJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAF,QAAAA,SAAS,CAACL,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAGA,IAAI,CAACC,SAAL,KAAiB,KAArC,CAAD,CAAT;AACA;;AACF;AACE,eAAOL,SAAS,CAACH,MAAD,CAAhB;AAXJ;;AAcAI,IAAAA,OAAO,CAACC,GAAR;AACD,GAlBQ,EAkBN,CAACP,KAAD,EAAQE,MAAR,CAlBM,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEJ,UADb;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,QAAQ,EAAEC,QAPZ;AAQE,MAAA,SAAS,EAAEC;AARb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxCQR,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Form from './Components/Form'\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [select, setSelect] = useState(\"All\");\n  const [filtered, setFilter] = useState([]);\n  useEffect(() => {\n    console.log(select, \"sled\");\n\n    switch (select) {\n\n      case \"Completed\":\n        console.log(\"Completed\")\n        setFilter(todos.filter(todo=> todo.completed===true))\n        break;\n      case \"Incomplete\":\n        console.log(\"Incomplete\")\n        setFilter(todos.filter(todo=> todo.completed===false))\n        break;\n      default:\n        return setFilter(select);\n    }\n\n    console.log()\n  }, [todos, select])\n\n  return (\n    <div className=\"todo-container\">\n      <Header heading=\"TODO List\" />\n      <Form\n        inputText={inputValue}\n        setInputValue={setInputValue}\n        todos={todos}\n        setTodos={setTodos}\n        select={select}\n        setSelect={setSelect}\n        filtered={filtered}\n        setFilter={setFilter}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}